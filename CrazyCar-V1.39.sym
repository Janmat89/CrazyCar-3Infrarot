00000000 W __heap_end
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 a __tmp_reg__
00000000 W __vector_default
00000000 T __vectors
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000001 a __zero_reg__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
00000034 a __CCP__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003d a __SP_L__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003e a __SP_H__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
0000003f a __SREG__
00000054 T __ctors_end
00000054 T __ctors_start
00000054 T __dtors_end
00000054 T __dtors_start
00000054 W __init
00000054 T __trampolines_end
00000054 T __trampolines_start
00000060 T __do_copy_data
0000006c t .do_copy_data_loop
00000070 t .do_copy_data_start
00000076 T __do_clear_bss
0000007e t .do_clear_bss_loop
00000080 t .do_clear_bss_start
0000008e T __bad_interrupt
0000008e W __vector_1
0000008e W __vector_10
0000008e W __vector_11
0000008e W __vector_12
0000008e W __vector_15
0000008e W __vector_16
0000008e W __vector_17
0000008e W __vector_18
0000008e W __vector_19
0000008e W __vector_2
0000008e W __vector_20
0000008e W __vector_3
0000008e W __vector_5
0000008e W __vector_6
0000008e W __vector_7
0000008e W __vector_8
0000008e W __vector_9
00000092 T autonomFahren
00000118 T main
0000025e T pwm_init
00000278 T adc_init
00000286 T adc
000002aa T __vector_4
000002d8 T init_Timer2
000002ec T init_pwm
0000030e T __vector_13
00000362 T __vector_14
000003ac T uart_init
000003d4 T uart_getc
0000040e T uart_putc
00000432 T uart_puts
0000044c T uart_puts_p
00000468 T warte_sekunden
00000490 T warte_ms
000004aa T ledPB1
000004b6 T ledPB2
000004c2 T ledPC2
000004ce T ledPC3
000004da T s1
000004f0 T s2
00000508 T s3
00000520 T s4
00000538 T mittelWerteBerechnen
000006be T ledPB1_flash
000006e2 T ledPB2_flash
00000706 T ledPC2_flash
0000072a T ledPC3_flash
0000075a T terminal_aktiv
000007fe T datenspeichern
0000085f W __stack
00000b56 T initMikroController
00000bb2 T pruefeWerteBereich
00000bd4 T ausgabeUSBlogoff
00000dc6 T ausgabehistory
0000120a T ausgabeUSB2
0000180e T eingabeUSB
00001d6e T fahren2
00001d70 T linearisierungAD
00001dae T ro
00001db8 T pReglerServoRechts
00001e0c T akkuSpannungPruefen
00001e0e T ledSchalterTest
00001e10 T fahren1
00001ece T initServo
00001f24 T servo
00001fc2 T initFahr
00001fc8 T getServoPrivate
00002036 T getServo
00002040 T getServoM
00002046 T getFahrPrivate
0000207a T getFahr
00002084 T getFahrM
0000208a T freeRam
000020c6 T rueckwaerts
00002106 T fahr
00002162 T testServo
00002298 T __udivmodhi4
000022a0 t __udivmodhi4_loop
000022ae t __udivmodhi4_ep
000022c0 T __divmodhi4
000022c0 T _div
000022d4 t __divmodhi4_neg2
000022da t __divmodhi4_exit
000022dc t __divmodhi4_neg1
000022e6 T malloc
00002440 T free
000024f0 T atoi
0000252c T strcat
00002542 T strcpy
00002550 T itoa
00002592 T __mulhi_const_10
000025a2 T __eerd_byte_m32
000025b2 T __eewr_byte_m32
000025b4 T __eewr_r18_m32
000025cc T strrev
000025ec T _exit
000025ec W exit
000025ee t __stop_program
000025f0 A __data_load_start
000025f0 T _etext
0000272a A __data_load_end
00800060 D __data_start
00800060 D cnt1_top
00800062 D hmod
00800063 D anzahl
00800064 D hisDepth
00800065 D ausgabefaktor
00800066 D welcome
00800070 D freeRAMText
00800078 D abtastzeitMAXText
0080007e D akkuText
00800083 D gleichText
00800085 D grosserText
00800087 D kommandos
008000ab D modTEXT
008000af D myTEXT
008000b2 D tab
008000b6 D anText
008000ba D ausText
008000bf D textF
008000c8 D textF1
008000d3 D m1
008000d5 D m2
008000d7 D ausgabeT
008000e6 D datenSatzZaehler
00800194 D __malloc_margin
00800196 D __malloc_heap_start
00800198 D __malloc_heap_end
0080019a B __bss_start
0080019a D __data_end
0080019a D _edata
0080019a B abtastzeit
0080019c B abtastzeitMAX
0080019e B abtastzeitZyklus
008001a0 B OutL
008001a2 B OutR
008001a4 B OutV
008001a6 B OutS
008001a8 B OutFR
008001aa B OutHL
008001ac B OutHR
008001ae B OutHV
008001b0 B OutHS
008001b2 B OutHFR
008001b4 B OutHH1
008001b6 B OutHH2
008001b8 B OutHH3
008001ba B OutH1
008001bc B OutH2
008001be B OutH3
008001c0 B h1
008001c2 B h2
008001c4 B h3
008001c6 B j
008001c7 B logOnOff
008001c8 B logOffAus
008001c9 B logCmOnOff
008001ca B history
008001cb B logBTOnOff
008001cc B logStart
008001cd B hspStart
008001ce B mod
008001cf B logMod
008001d0 B kommand
008001d2 B ausgabe1
008001d4 B ausgabe2
008001d6 B ausgabe3
008001d8 b USART_TxBuf
008001f8 b USART_RxBuf
00800218 b USART_TxHead
00800219 b USART_TxTail
0080021a b USART_RxHead
0080021b b USART_RxTail
0080021c b USART_LastRxError
0080021d B historyAverageL
0080021f B historyAverageR
00800221 B historyAverageV
00800223 B historyAverageS
00800225 B historyAverageFR
00800227 B historyAverageH1
00800229 B historyAverageH2
0080022b B historyAverageH3
0080022d B historyDepthPointer
0080022e B histerese
00800230 B ereignisBremsen
00800231 B servoG
00800233 B analogwertAkku
00800235 B abstandlinks
00800237 B myb
00800239 B analogwertV
0080023b B abstandrechts
0080023d B myc
0080023f B mya
00800241 B convertInt
00800243 B analogwertL
00800245 B convertUint
00800247 B wert
00800249 B maxFahr
0080024a B y
0080024c B servoMR
0080024e B befehl
0080024f B analogwertR
00800251 B texth
0080026a B servoML
0080026c B e
0080026e B zeichen
0080026f B abstandvorne
00800271 B eingabe
0080028a B hAS
0080028c B hAH1
0080028e B hAV
00800290 B hAH2
00800292 B hAL
00800294 B hAFR
00800296 B hAR
00800298 B hAH3
0080029a B __brkval
0080029c B __flp
0080029e B __bss_end
0080029e B __heap_start
0080029e B _end
00810000 D historyDepthL
00810078 D historyDepthR
008100f0 D historyDepthV
00810168 D historyDepthS
008101e0 D historyDepthFR
00810258 D historyZzMAX
0081025a D historyDepthH1
008102d2 D historyDepthH2
0081034a D historyDepthH3
008103c2 D __eeprom_end
